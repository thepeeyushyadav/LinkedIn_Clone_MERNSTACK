{
  "version": 3,
  "sources": ["../../engine.io-parser/build/esm/commons.js", "../../engine.io-parser/build/esm/encodePacket.browser.js", "../../engine.io-parser/build/esm/contrib/base64-arraybuffer.js", "../../engine.io-parser/build/esm/decodePacket.browser.js", "../../engine.io-parser/build/esm/index.js", "../../socket.io-component-emitter/lib/esm/index.js", "../../engine.io-client/build/esm/globals.js", "../../engine.io-client/build/esm/util.js", "../../engine.io-client/build/esm/contrib/parseqs.js", "../../engine.io-client/build/esm/transport.js", "../../engine.io-client/build/esm/transports/polling.js", "../../engine.io-client/build/esm/contrib/has-cors.js", "../../engine.io-client/build/esm/transports/polling-xhr.js", "../../engine.io-client/build/esm/transports/websocket.js", "../../engine.io-client/build/esm/transports/webtransport.js", "../../engine.io-client/build/esm/transports/index.js", "../../engine.io-client/build/esm/contrib/parseuri.js", "../../engine.io-client/build/esm/socket.js", "../../engine.io-client/build/esm/index.js", "../../ms/index.js", "../../socket.io-client/node_modules/debug/src/common.js", "../../socket.io-client/node_modules/debug/src/browser.js", "../../socket.io-client/build/esm-debug/url.js", "../../socket.io-parser/build/esm/is-binary.js", "../../socket.io-parser/build/esm/binary.js", "../../socket.io-parser/build/esm/index.js", "../../socket.io-client/build/esm-debug/on.js", "../../socket.io-client/build/esm-debug/socket.js", "../../socket.io-client/build/esm-debug/contrib/backo2.js", "../../socket.io-client/build/esm-debug/manager.js", "../../socket.io-client/build/esm-debug/index.js"],
  "sourcesContent": ["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n", "import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n", "// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n", "import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n", "import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n", "/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n", "export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n", "import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n", "// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n", "import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n", "import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n", "// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n", "import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n", "import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n", "import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n", "import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n", "// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n", "import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n", "import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "import { parse } from \"engine.io-client\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:url\"); // debug()\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n", "const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n", "import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n", "import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\", // used on the client side\n    \"connect_error\", // used on the client side\n    \"disconnect\", // used on both sides\n    \"disconnecting\", // used on the server side\n    \"newListener\", // used by the Node.js EventEmitter\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\nfunction isNamespaceValid(nsp) {\n    return typeof nsp === \"string\";\n}\n// see https://caniuse.com/mdn-javascript_builtins_number_isinteger\nconst isInteger = Number.isInteger ||\n    function (value) {\n        return (typeof value === \"number\" &&\n            isFinite(value) &&\n            Math.floor(value) === value);\n    };\nfunction isAckIdValid(id) {\n    return id === undefined || isInteger(id);\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\nfunction isDataValid(type, payload) {\n    switch (type) {\n        case PacketType.CONNECT:\n            return payload === undefined || isObject(payload);\n        case PacketType.DISCONNECT:\n            return payload === undefined;\n        case PacketType.EVENT:\n            return (Array.isArray(payload) &&\n                (typeof payload[0] === \"number\" ||\n                    (typeof payload[0] === \"string\" &&\n                        RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n        case PacketType.ACK:\n            return Array.isArray(payload);\n        case PacketType.CONNECT_ERROR:\n            return typeof payload === \"string\" || isObject(payload);\n        default:\n            return false;\n    }\n}\nexport function isPacketValid(packet) {\n    return (isNamespaceValid(packet.nsp) &&\n        isAckIdValid(packet.id) &&\n        isDataValid(packet.type, packet.data));\n}\n", "export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n", "import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:socket\"); // debug()\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            debug(\"emitting packet with ack id %d\", id);\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    debug(\"removing packet with ack id %d from the buffer\", id);\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            debug(\"event with ack id %d has timed out after %d ms\", id, timeout);\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    debug(\"packet [%d] is discarded after %d tries\", packet.id, packet.tryCount);\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                debug(\"packet [%d] was successfully sent\", packet.id);\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        debug(\"draining queue\");\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            debug(\"packet [%d] has already been sent and is waiting for an ack\", packet.id);\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        debug(\"sending packet [%d] (try n°%d)\", packet.id, packet.tryCount);\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            debug(\"bad ack %s\", packet.id);\n            return;\n        }\n        delete this.acks[packet.id];\n        debug(\"calling ack %s with %j\", packet.id, packet.data);\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n", "/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n", "import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:manager\"); // debug()\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            debug(\"error\");\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n", "import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client\"); // debug()\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n"],
  "mappings": "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",
  "names": ["PACKET_TYPES", "Object", "create", "PACKET_TYPES_REVERSE", "keys", "forEach", "key", "ERROR_PACKET", "type", "data", "withNativeBlob", "Blob", "prototype", "toString", "call", "withNativeArrayBuffer", "ArrayBuffer", "isView", "obj", "buffer", "encodePacket", "_ref", "supportsBinary", "callback", "encodeBlobAsBase64", "fileReader", "FileReader", "onload", "content", "result", "split", "readAsDataURL", "toArray", "Uint8Array", "byteOffset", "byteLength", "TEXT_ENCODER", "encodePacketToBinary", "packet", "arrayBuffer", "then", "encoded", "TextEncoder", "encode", "chars", "lookup", "i", "length", "charCodeAt", "decode", "base64", "bufferLength", "len", "p", "encoded1", "encoded2", "encoded3", "encoded4", "arraybuffer", "bytes", "decodePacket", "encodedPacket", "binaryType", "mapBinary", "charAt", "decodeBase64Packet", "substring", "packetType", "decoded", "SEPARATOR", "String", "fromCharCode", "encodePayload", "packets", "encodedPackets", "Array", "count", "join", "decodePayload", "encodedPayload", "decodedPacket", "push", "createPacketEncoderStream", "TransformStream", "transform", "controller", "payloadLength", "header", "DataView", "setUint8", "view", "setUint16", "setBigUint64", "BigInt", "enqueue", "TEXT_DECODER", "totalLength", "chunks", "reduce", "acc", "chunk", "concatChunks", "size", "shift", "j", "slice", "createPacketDecoderStream", "maxPayload", "TextDecoder", "state", "expectedLength", "isBinary", "headerArray", "getUint16", "n", "getUint32", "Math", "pow", "protocol", "Emitter", "mixin", "on", "addEventListener", "event", "fn", "_callbacks", "once", "off", "apply", "arguments", "removeListener", "removeAllListeners", "removeEventListener", "callbacks", "cb", "splice", "emit", "args", "emitReserved", "listeners", "hasListeners", "nextTick", "isPromiseAvailable", "Promise", "resolve", "setTimeoutFn", "globalThisShim", "self", "window", "Function", "defaultBinaryType", "createCookieJar", "pick", "_len", "attr", "_key", "k", "hasOwnProperty", "NATIVE_SET_TIMEOUT", "globalThis", "setTimeout", "NATIVE_CLEAR_TIMEOUT", "clearTimeout", "installTimerFunctions", "opts", "useNativeTimers", "bind", "clearTimeoutFn", "BASE64_OVERHEAD", "utf8Length", "ceil", "str", "c", "l", "randomString", "Date", "now", "random", "encodeURIComponent", "qs", "qry", "pairs", "pair", "decodeURIComponent", "TransportError", "_Error", "reason", "description", "context", "_this", "_inheritsLoose", "_wrapNativeSuper", "Error", "Transport", "_Emitter", "_this2", "writable", "query", "socket", "forceBase64", "_proto", "onError", "open", "readyState", "doOpen", "close", "doClose", "onClose", "send", "write", "onOpen", "onData", "onPacket", "details", "pause", "onPause", "createUri", "schema", "undefined", "_hostname", "_port", "path", "_query", "hostname", "indexOf", "port", "secure", "Number", "encodedQuery", "Polling", "_Transport", "_polling", "_poll", "total", "doPoll", "_this3", "_this4", "_this5", "doWrite", "uri", "timestampRequests", "timestampParam", "sid", "b64", "_createClass", "get", "value", "XMLHttpRequest", "err", "hasCORS", "empty", "BaseXHR", "_Polling", "location", "isSSL", "xd", "req", "request", "method", "xhrStatus", "pollXhr", "Request", "createRequest", "_opts", "_method", "_uri", "_data", "_create", "_proto2", "_a", "xdomain", "xhr", "_xhr", "extraHeaders", "setDisableHeaderCheck", "setRequestHeader", "e", "cookieJar", "addCookies", "withCredentials", "requestTimeout", "timeout", "onreadystatechange", "parseCookies", "getResponseHeader", "status", "_onLoad", "_onError", "document", "_index", "requestsCount", "requests", "_cleanup", "fromError", "abort", "responseText", "attachEvent", "unloadHandler", "terminationEvent", "hasXHR2", "newRequest", "responseType", "XHR", "_BaseXHR", "_this6", "_proto3", "_extends", "concat", "isReactNative", "navigator", "product", "toLowerCase", "BaseWS", "protocols", "headers", "ws", "createSocket", "addEventListeners", "onopen", "autoUnref", "_socket", "unref", "onclose", "closeEvent", "onmessage", "ev", "onerror", "_loop", "lastPacket", "WebSocketCtor", "WebSocket", "MozWebSocket", "WS", "_BaseWS", "_packet", "WT", "_transport", "WebTransport", "transportOptions", "name", "closed", "ready", "createBidirectionalStream", "stream", "decoderStream", "MAX_SAFE_INTEGER", "reader", "readable", "pipeThrough", "getReader", "encoderStream", "pipeTo", "_writer", "getWriter", "read", "done", "transports", "websocket", "webtransport", "polling", "re", "parts", "parse", "src", "b", "replace", "m", "exec", "source", "host", "authority", "ipv6uri", "pathNames", "queryKey", "regx", "names", "$0", "$1", "$2", "withEventListeners", "OFFLINE_EVENT_LISTENERS", "listener", "SocketWithoutUpgrade", "writeBuffer", "_prevBufferLen", "_pingInterval", "_pingTimeout", "_maxPayload", "_pingTimeoutTime", "Infinity", "_typeof", "parsedUri", "_transportsByName", "t", "transportName", "agent", "upgrade", "rememberUpgrade", "addTrailingSlash", "rejectUnauthorized", "perMessageDeflate", "threshold", "closeOnBeforeunload", "_beforeunloadEventListener", "transport", "_offlineEventListener", "_onClose", "_cookieJar", "_open", "createTransport", "EIO", "id", "priorWebsocketSuccess", "setTransport", "_onDrain", "_onPacket", "flush", "onHandshake", "JSON", "_sendPacket", "_resetPingTimeout", "code", "pingInterval", "pingTimeout", "_pingTimeoutTimer", "delay", "upgrading", "_getWritablePackets", "shouldCheckPayloadSize", "payloadSize", "_hasPingExpired", "hasExpired", "msg", "options", "compress", "cleanupAndClose", "waitForUpgrade", "tryAllTransports", "SocketWithUpgrade", "_SocketWithoutUpgrade", "_this7", "_upgrades", "_probe", "_this8", "failed", "onTransportOpen", "cleanup", "freezeTransport", "error", "onTransportClose", "onupgrade", "to", "_filterUpgrades", "upgrades", "filteredUpgrades", "Socket", "_SocketWithUpgrade", "o", "map", "DEFAULT_TRANSPORTS", "filter", "s", "h", "d", "w", "y", "ms", "val", "isFinite", "fmtLong", "fmtShort", "stringify", "match", "parseFloat", "msAbs", "abs", "round", "plural", "isPlural", "setup", "env", "createDebug", "debug", "coerce", "disable", "enable", "enabled", "humanize", "require$$0", "destroy", "skips", "formatters", "selectColor", "namespace", "hash", "colors", "prevTime", "enableOverride", "namespacesCache", "enabledCache", "curr", "diff", "prev", "unshift", "index", "format", "formatter", "formatArgs", "logFn", "log", "useColors", "color", "extend", "defineProperty", "enumerable", "configurable", "namespaces", "set", "v", "init", "delimiter", "newDebug", "save", "RegExp", "_toConsumableArray", "toNamespace", "test", "regexp", "stack", "message", "console", "warn", "load", "common", "exports", "storage", "localstorage", "warned", "process", "__nwjs", "userAgent", "documentElement", "style", "WebkitAppearance", "firebug", "exception", "table", "parseInt", "module", "lastC", "setItem", "removeItem", "r", "getItem", "DEBUG", "localStorage", "debugModule", "url", "loc", "ipv6", "href", "withNativeFile", "File", "hasBinary", "toJSON", "isArray", "deconstructPacket", "buffers", "packetData", "pack", "_deconstructPacket", "attachments", "placeholder", "_placeholder", "num", "newData", "reconstructPacket", "_reconstructPacket", "isIndexValid", "RESERVED_EVENTS", "PacketType", "Encoder", "replacer", "EVENT", "ACK", "encodeAsBinary", "BINARY_EVENT", "BINARY_ACK", "nsp", "encodeAsString", "deconstruction", "Decoder", "reviver", "add", "reconstructor", "decodeString", "isBinaryEvent", "BinaryReconstructor", "takeBinaryData", "start", "buf", "next", "payload", "tryParse", "substr", "isPayloadValid", "CONNECT", "isObject", "DISCONNECT", "CONNECT_ERROR", "finishedReconstruction", "reconPack", "binData", "isNamespaceValid", "isInteger", "floor", "isAckIdValid", "isDataValid", "isPacketValid", "subDestroy", "freeze", "connect", "connect_error", "disconnect", "disconnecting", "newListener", "io", "connected", "recovered", "receiveBuffer", "sendBuffer", "_queue", "_queueSeq", "ids", "acks", "flags", "auth", "_autoConnect", "subEvents", "subs", "onpacket", "_readyState", "_b", "_c", "_len2", "_key2", "retries", "fromQueue", "_addToQueue", "ack", "pop", "_registerAckCallback", "isTransportWritable", "engine", "isConnected", "discardPacket", "notifyOutgoingListeners", "ackTimeout", "timer", "_len3", "_key3", "withError", "emitWithAck", "_len4", "_key4", "reject", "arg1", "arg2", "tryCount", "pending", "hasError", "_len5", "responseArgs", "_key5", "_drainQueue", "force", "_sendConnectPacket", "_pid", "pid", "offset", "_lastOffset", "_clearAcks", "isBuffered", "some", "sameNamespace", "onconnect", "onevent", "onack", "ondisconnect", "emitEvent", "_anyListeners", "_iterator", "_createForOfIteratorHelper", "_step", "f", "sent", "_len6", "_key6", "emitBuffered", "onAny", "prependAny", "offAny", "listenersAny", "onAnyOutgoing", "_anyOutgoingListeners", "prependAnyOutgoing", "offAnyOutgoing", "listenersAnyOutgoing", "_iterator2", "_step2", "Backoff", "min", "max", "factor", "jitter", "attempts", "duration", "rand", "deviation", "reset", "setMin", "setMax", "setJitter", "Manager", "nsps", "reconnection", "reconnectionAttempts", "reconnectionDelay", "reconnectionDelayMax", "randomizationFactor", "backoff", "_parser", "parser", "encoder", "decoder", "autoConnect", "_reconnection", "skipReconnect", "_reconnectionAttempts", "_reconnectionDelay", "_randomizationFactor", "_reconnectionDelayMax", "_timeout", "maybeReconnectOnOpen", "_reconnecting", "reconnect", "Engine", "openSubDestroy", "errorSub", "onping", "ondata", "ondecoded", "active", "_destroy", "_i", "_nsps", "_close", "onreconnect", "attempt", "cache", "parsed", "newConnection", "forceNew", "multiplex"]
}
